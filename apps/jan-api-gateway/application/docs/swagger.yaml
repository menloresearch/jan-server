basePath: /
definitions:
  app_interfaces_http_routes_jan_v1_apikeys.ApiKeyResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      enabled:
        type: boolean
      expires_at:
        type: string
      id:
        type: integer
      key:
        type: string
      plaintext_hint:
        type: string
    type: object
  app_interfaces_http_routes_jan_v1_apikeys.CreateApiKeyRequest:
    properties:
      description:
        type: string
      expires_at:
        type: string
    type: object
  app_interfaces_http_routes_jan_v1_apikeys.UpdateApiKeyRequest:
    properties:
      description:
        type: string
      enabled:
        type: boolean
      expires_at:
        type: string
    type: object
  app_interfaces_http_routes_jan_v1_auth.GetMeResponse:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  app_interfaces_http_routes_jan_v1_auth.RefreshTokenResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
    type: object
  app_interfaces_http_routes_jan_v1_auth_google.GoogleCallbackRequest:
    properties:
      code:
        type: string
      state:
        type: string
    required:
    - code
    type: object
  app_interfaces_http_routes_jan_v1_auth_google.GoogleCallbackResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
    type: object
  app_interfaces_http_routes_jan_v1_chat.ChatCompletionResponseSwagger:
    properties:
      choices:
        items:
          $ref: '#/definitions/openai.ChatCompletionChoice'
        type: array
      created:
        type: integer
      id:
        type: string
      model:
        type: string
      object:
        type: string
      usage:
        $ref: '#/definitions/openai.Usage'
    type: object
  app_interfaces_http_routes_v1.Model:
    properties:
      created:
        type: integer
      id:
        type: string
      object:
        type: string
      owned_by:
        type: string
    type: object
  app_interfaces_http_routes_v1.ModelsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/app_interfaces_http_routes_v1.Model'
        type: array
      object:
        type: string
    type: object
  app_interfaces_http_routes_v1_chat.ChatCompletionResponseSwagger:
    properties:
      choices:
        items:
          $ref: '#/definitions/openai.ChatCompletionChoice'
        type: array
      created:
        type: integer
      id:
        type: string
      model:
        type: string
      object:
        type: string
      usage:
        $ref: '#/definitions/openai.Usage'
    type: object
  app_interfaces_http_routes_v1_organization.AdminAPIKeyDeletedResponse:
    properties:
      deleted:
        type: boolean
      id:
        type: string
      object:
        type: string
    type: object
  app_interfaces_http_routes_v1_organization.AdminApiKeyListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/app_interfaces_http_routes_v1_organization.OrganizationAdminAPIKeyResponse'
        type: array
      first_id:
        type: string
      has_more:
        type: boolean
      last_id:
        type: string
      object:
        example: list
        type: string
    type: object
  app_interfaces_http_routes_v1_organization.CreateOrganizationAdminAPIKeyRequest:
    properties:
      name:
        example: My Admin API Key
        type: string
    required:
    - name
    type: object
  app_interfaces_http_routes_v1_organization.OrganizationAdminAPIKeyResponse:
    properties:
      created_at:
        example: 1698765432
        type: integer
      id:
        example: key_1234567890
        type: string
      last_used_at:
        example: 1698765432
        type: integer
      name:
        example: My Admin API Key
        type: string
      object:
        example: api_key
        type: string
      owner:
        $ref: '#/definitions/app_interfaces_http_routes_v1_organization.Owner'
      redacted_value:
        example: sk-...abcd
        type: string
      value:
        example: sk-abcdef1234567890
        type: string
    type: object
  app_interfaces_http_routes_v1_organization.Owner:
    properties:
      created_at:
        example: 1698765432
        type: integer
      id:
        example: user_1234567890
        type: string
      name:
        example: John Doe
        type: string
      object:
        example: user
        type: string
      role:
        example: admin
        type: string
      type:
        example: user
        type: string
    type: object
  menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse:
    properties:
      code:
        type: string
      error:
        type: string
    type: object
  menlo_ai_jan-api-gateway_app_interfaces_http_responses.GeneralResponse-app_interfaces_http_routes_jan_v1_apikeys_ApiKeyResponse:
    properties:
      result:
        $ref: '#/definitions/app_interfaces_http_routes_jan_v1_apikeys.ApiKeyResponse'
      status:
        type: string
    type: object
  menlo_ai_jan-api-gateway_app_interfaces_http_responses.GeneralResponse-app_interfaces_http_routes_jan_v1_auth_GetMeResponse:
    properties:
      result:
        $ref: '#/definitions/app_interfaces_http_routes_jan_v1_auth.GetMeResponse'
      status:
        type: string
    type: object
  ? menlo_ai_jan-api-gateway_app_interfaces_http_responses.GeneralResponse-app_interfaces_http_routes_jan_v1_auth_RefreshTokenResponse
  : properties:
      result:
        $ref: '#/definitions/app_interfaces_http_routes_jan_v1_auth.RefreshTokenResponse'
      status:
        type: string
    type: object
  ? menlo_ai_jan-api-gateway_app_interfaces_http_responses.GeneralResponse-app_interfaces_http_routes_jan_v1_auth_google_GoogleCallbackResponse
  : properties:
      result:
        $ref: '#/definitions/app_interfaces_http_routes_jan_v1_auth_google.GoogleCallbackResponse'
      status:
        type: string
    type: object
  ? menlo_ai_jan-api-gateway_app_interfaces_http_responses.ListlResponse-array_app_interfaces_http_routes_jan_v1_apikeys_ApiKeyResponse
  : properties:
      page:
        type: integer
      page_size:
        type: integer
      results:
        items:
          items:
            $ref: '#/definitions/app_interfaces_http_routes_jan_v1_apikeys.ApiKeyResponse'
          type: array
        type: array
      status:
        type: string
      total:
        type: integer
    type: object
  openai.ChatCompletionChoice:
    properties:
      content_filter_results:
        $ref: '#/definitions/openai.ContentFilterResults'
      finish_reason:
        allOf:
        - $ref: '#/definitions/openai.FinishReason'
        description: |-
          FinishReason
          stop: API returned complete message,
          or a message terminated by one of the stop sequences provided via the stop parameter
          length: Incomplete model output due to max_tokens parameter or token limit
          function_call: The model decided to call a function
          content_filter: Omitted content due to a flag from our content filters
          null: API response still in progress or incomplete
      index:
        type: integer
      logprobs:
        $ref: '#/definitions/openai.LogProbs'
      message:
        $ref: '#/definitions/openai.ChatCompletionMessage'
    type: object
  openai.ChatCompletionMessage:
    properties:
      content:
        type: string
      function_call:
        $ref: '#/definitions/openai.FunctionCall'
      multiContent:
        items:
          $ref: '#/definitions/openai.ChatMessagePart'
        type: array
      name:
        description: |-
          This property isn't in the official documentation, but it's in
          the documentation for the official library for python:
          - https://github.com/openai/openai-python/blob/main/chatml.md
          - https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb
        type: string
      reasoning_content:
        description: |-
          This property is used for the "reasoning" feature supported by deepseek-reasoner
          which is not in the official documentation.
          the doc from deepseek:
          - https://api-docs.deepseek.com/api/create-chat-completion#responses
        type: string
      refusal:
        type: string
      role:
        type: string
      tool_call_id:
        description: For Role=tool prompts this should be set to the ID given in the
          assistant's prior request to call a tool.
        type: string
      tool_calls:
        description: For Role=assistant prompts this may be set to the tool calls
          generated by the model, such as function calls.
        items:
          $ref: '#/definitions/openai.ToolCall'
        type: array
    type: object
  openai.ChatCompletionRequest:
    properties:
      chat_template_kwargs:
        additionalProperties: {}
        description: |-
          ChatTemplateKwargs provides a way to add non-standard parameters to the request body.
          Additional kwargs to pass to the template renderer. Will be accessible by the chat template.
          Such as think mode for qwen3. "chat_template_kwargs": {"enable_thinking": false}
          https://qwen.readthedocs.io/en/latest/deployment/vllm.html#thinking-non-thinking-modes
        type: object
      frequency_penalty:
        type: number
      function_call:
        description: 'Deprecated: use ToolChoice instead.'
      functions:
        description: 'Deprecated: use Tools instead.'
        items:
          $ref: '#/definitions/openai.FunctionDefinition'
        type: array
      guided_choice:
        description: |-
          GuidedChoice is a vLLM-specific extension that restricts the model's output
          to one of the predefined string choices provided in this field. This feature
          is used to constrain the model's responses to a controlled set of options,
          ensuring predictable and consistent outputs in scenarios where specific
          choices are required.
        items:
          type: string
        type: array
      logit_bias:
        additionalProperties:
          type: integer
        description: |-
          LogitBias is must be a token id string (specified by their token ID in the tokenizer), not a word string.
          incorrect: `"logit_bias":{"You": 6}`, correct: `"logit_bias":{"1639": 6}`
          refs: https://platform.openai.com/docs/api-reference/chat/create#chat/create-logit_bias
        type: object
      logprobs:
        description: |-
          LogProbs indicates whether to return log probabilities of the output tokens or not.
          If true, returns the log probabilities of each output token returned in the content of message.
          This option is currently not available on the gpt-4-vision-preview model.
        type: boolean
      max_completion_tokens:
        description: |-
          MaxCompletionTokens An upper bound for the number of tokens that can be generated for a completion,
          including visible output tokens and reasoning tokens https://platform.openai.com/docs/guides/reasoning
        type: integer
      max_tokens:
        description: |-
          MaxTokens The maximum number of tokens that can be generated in the chat completion.
          This value can be used to control costs for text generated via API.
          Deprecated: use MaxCompletionTokens. Not compatible with o1-series models.
          refs: https://platform.openai.com/docs/api-reference/chat/create#chat-create-max_tokens
        type: integer
      messages:
        items:
          $ref: '#/definitions/openai.ChatCompletionMessage'
        type: array
      metadata:
        additionalProperties:
          type: string
        description: Metadata to store with the completion.
        type: object
      model:
        type: string
      "n":
        type: integer
      parallel_tool_calls:
        description: 'Disable the default behavior of parallel tool calls by setting
          it: false.'
      prediction:
        allOf:
        - $ref: '#/definitions/openai.Prediction'
        description: Configuration for a predicted output.
      presence_penalty:
        type: number
      reasoning_effort:
        description: Controls effort on reasoning for reasoning models. It can be
          set to "low", "medium", or "high".
        type: string
      response_format:
        $ref: '#/definitions/openai.ChatCompletionResponseFormat'
      safety_identifier:
        description: |-
          A stable identifier used to help detect users of your application that may be violating OpenAI's usage policies.
          The IDs should be a string that uniquely identifies each user.
          We recommend hashing their username or email address, in order to avoid sending us any identifying information.
          https://platform.openai.com/docs/api-reference/chat/create#chat_create-safety_identifier
        type: string
      seed:
        type: integer
      service_tier:
        allOf:
        - $ref: '#/definitions/openai.ServiceTier'
        description: Specifies the latency tier to use for processing the request.
      stop:
        items:
          type: string
        type: array
      store:
        description: |-
          Store can be set to true to store the output of this completion request for use in distillations and evals.
          https://platform.openai.com/docs/api-reference/chat/create#chat-create-store
        type: boolean
      stream:
        type: boolean
      stream_options:
        allOf:
        - $ref: '#/definitions/openai.StreamOptions'
        description: 'Options for streaming response. Only set this when you set stream:
          true.'
      temperature:
        type: number
      tool_choice:
        description: This can be either a string or an ToolChoice object.
      tools:
        items:
          $ref: '#/definitions/openai.Tool'
        type: array
      top_logprobs:
        description: |-
          TopLogProbs is an integer between 0 and 5 specifying the number of most likely tokens to return at each
          token position, each with an associated log probability.
          logprobs must be set to true if this parameter is used.
        type: integer
      top_p:
        type: number
      user:
        type: string
    type: object
  openai.ChatCompletionResponseFormat:
    properties:
      json_schema:
        $ref: '#/definitions/openai.ChatCompletionResponseFormatJSONSchema'
      type:
        $ref: '#/definitions/openai.ChatCompletionResponseFormatType'
    type: object
  openai.ChatCompletionResponseFormatJSONSchema:
    properties:
      description:
        type: string
      name:
        type: string
      schema: {}
      strict:
        type: boolean
    type: object
  openai.ChatCompletionResponseFormatType:
    enum:
    - json_object
    - json_schema
    - text
    type: string
    x-enum-varnames:
    - ChatCompletionResponseFormatTypeJSONObject
    - ChatCompletionResponseFormatTypeJSONSchema
    - ChatCompletionResponseFormatTypeText
  openai.ChatMessageImageURL:
    properties:
      detail:
        $ref: '#/definitions/openai.ImageURLDetail'
      url:
        type: string
    type: object
  openai.ChatMessagePart:
    properties:
      image_url:
        $ref: '#/definitions/openai.ChatMessageImageURL'
      text:
        type: string
      type:
        $ref: '#/definitions/openai.ChatMessagePartType'
    type: object
  openai.ChatMessagePartType:
    enum:
    - text
    - image_url
    type: string
    x-enum-varnames:
    - ChatMessagePartTypeText
    - ChatMessagePartTypeImageURL
  openai.CompletionTokensDetails:
    properties:
      accepted_prediction_tokens:
        type: integer
      audio_tokens:
        type: integer
      reasoning_tokens:
        type: integer
      rejected_prediction_tokens:
        type: integer
    type: object
  openai.ContentFilterResults:
    properties:
      hate:
        $ref: '#/definitions/openai.Hate'
      jailbreak:
        $ref: '#/definitions/openai.JailBreak'
      profanity:
        $ref: '#/definitions/openai.Profanity'
      self_harm:
        $ref: '#/definitions/openai.SelfHarm'
      sexual:
        $ref: '#/definitions/openai.Sexual'
      violence:
        $ref: '#/definitions/openai.Violence'
    type: object
  openai.FinishReason:
    enum:
    - stop
    - length
    - function_call
    - tool_calls
    - content_filter
    - "null"
    type: string
    x-enum-varnames:
    - FinishReasonStop
    - FinishReasonLength
    - FinishReasonFunctionCall
    - FinishReasonToolCalls
    - FinishReasonContentFilter
    - FinishReasonNull
  openai.FunctionCall:
    properties:
      arguments:
        description: call function with arguments in JSON format
        type: string
      name:
        type: string
    type: object
  openai.FunctionDefinition:
    properties:
      description:
        type: string
      name:
        type: string
      parameters:
        description: |-
          Parameters is an object describing the function.
          You can pass json.RawMessage to describe the schema,
          or you can pass in a struct which serializes to the proper JSON schema.
          The jsonschema package is provided for convenience, but you should
          consider another specialized library if you require more complex schemas.
      strict:
        type: boolean
    type: object
  openai.Hate:
    properties:
      filtered:
        type: boolean
      severity:
        type: string
    type: object
  openai.ImageURLDetail:
    enum:
    - high
    - low
    - auto
    type: string
    x-enum-varnames:
    - ImageURLDetailHigh
    - ImageURLDetailLow
    - ImageURLDetailAuto
  openai.JailBreak:
    properties:
      detected:
        type: boolean
      filtered:
        type: boolean
    type: object
  openai.LogProb:
    properties:
      bytes:
        description: Omitting the field if it is null
        items:
          type: integer
        type: array
      logprob:
        type: number
      token:
        type: string
      top_logprobs:
        description: |-
          TopLogProbs is a list of the most likely tokens and their log probability, at this token position.
          In rare cases, there may be fewer than the number of requested top_logprobs returned.
        items:
          $ref: '#/definitions/openai.TopLogProbs'
        type: array
    type: object
  openai.LogProbs:
    properties:
      content:
        description: Content is a list of message content tokens with log probability
          information.
        items:
          $ref: '#/definitions/openai.LogProb'
        type: array
    type: object
  openai.Prediction:
    properties:
      content:
        type: string
      type:
        type: string
    type: object
  openai.Profanity:
    properties:
      detected:
        type: boolean
      filtered:
        type: boolean
    type: object
  openai.PromptTokensDetails:
    properties:
      audio_tokens:
        type: integer
      cached_tokens:
        type: integer
    type: object
  openai.SelfHarm:
    properties:
      filtered:
        type: boolean
      severity:
        type: string
    type: object
  openai.ServiceTier:
    enum:
    - auto
    - default
    - flex
    - priority
    type: string
    x-enum-varnames:
    - ServiceTierAuto
    - ServiceTierDefault
    - ServiceTierFlex
    - ServiceTierPriority
  openai.Sexual:
    properties:
      filtered:
        type: boolean
      severity:
        type: string
    type: object
  openai.StreamOptions:
    properties:
      include_usage:
        description: |-
          If set, an additional chunk will be streamed before the data: [DONE] message.
          The usage field on this chunk shows the token usage statistics for the entire request,
          and the choices field will always be an empty array.
          All other chunks will also include a usage field, but with a null value.
        type: boolean
    type: object
  openai.Tool:
    properties:
      function:
        $ref: '#/definitions/openai.FunctionDefinition'
      type:
        $ref: '#/definitions/openai.ToolType'
    type: object
  openai.ToolCall:
    properties:
      function:
        $ref: '#/definitions/openai.FunctionCall'
      id:
        type: string
      index:
        description: Index is not nil only in chat completion chunk object
        type: integer
      type:
        $ref: '#/definitions/openai.ToolType'
    type: object
  openai.ToolType:
    enum:
    - function
    type: string
    x-enum-varnames:
    - ToolTypeFunction
  openai.TopLogProbs:
    properties:
      bytes:
        items:
          type: integer
        type: array
      logprob:
        type: number
      token:
        type: string
    type: object
  openai.Usage:
    properties:
      completion_tokens:
        type: integer
      completion_tokens_details:
        $ref: '#/definitions/openai.CompletionTokensDetails'
      prompt_tokens:
        type: integer
      prompt_tokens_details:
        $ref: '#/definitions/openai.PromptTokensDetails'
      total_tokens:
        type: integer
    type: object
  openai.Violence:
    properties:
      filtered:
        type: boolean
      severity:
        type: string
    type: object
info:
  contact: {}
  description: This is the API gateway for Jan Server.
  title: Jan Server
  version: "1.0"
paths:
  /jan/v1/apikeys/:
    get:
      description: Get a list of API keys for the authenticated user with pagination.
      parameters:
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved the list of API keys
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ListlResponse-array_app_interfaces_http_routes_jan_v1_apikeys_ApiKeyResponse'
        "400":
          description: Bad request (e.g., invalid query parameters)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "401":
          description: Unauthorized (e.g., missing or invalid JWT)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List API keys
      tags:
      - API Keys
    post:
      consumes:
      - application/json
      description: Create a new API key for the authenticated user.
      parameters:
      - description: Request body for creating an API key
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/app_interfaces_http_routes_jan_v1_apikeys.CreateApiKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created the API key
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.GeneralResponse-app_interfaces_http_routes_jan_v1_apikeys_ApiKeyResponse'
        "400":
          description: Bad request (e.g., invalid JSON, missing required fields)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "401":
          description: Unauthorized (e.g., missing or invalid JWT)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create an API key
      tags:
      - API Keys
  /jan/v1/apikeys/{id}:
    delete:
      description: Deletes a specific API key by its ID.
      parameters:
      - description: API Key ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad request (e.g., invalid ID format)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "401":
          description: Unauthorized (e.g., missing or invalid JWT)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "404":
          description: API key not found
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete an API key
      tags:
      - API Keys
    put:
      consumes:
      - application/json
      description: Update the description, expiry date, or enabled status of an existing
        API key.
      parameters:
      - description: API Key ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request body for updating an API key
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/app_interfaces_http_routes_jan_v1_apikeys.UpdateApiKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated the API key
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.GeneralResponse-app_interfaces_http_routes_jan_v1_apikeys_ApiKeyResponse'
        "400":
          description: Bad request (e.g., invalid ID format, invalid JSON)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "401":
          description: Unauthorized (e.g., missing or invalid JWT)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "404":
          description: API key not found
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update an API key
      tags:
      - API Keys
  /jan/v1/auth/google/callback:
    post:
      consumes:
      - application/json
      description: Handles the callback from the Google OAuth2 provider to exchange
        the authorization code for a token, verify the user, and issue access and
        refresh tokens.
      parameters:
      - description: Request body containing the authorization code and state
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/app_interfaces_http_routes_jan_v1_auth_google.GoogleCallbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully authenticated and returned tokens
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.GeneralResponse-app_interfaces_http_routes_jan_v1_auth_google_GoogleCallbackResponse'
        "400":
          description: Bad request (e.g., invalid state, missing code, or invalid
            claims)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "401":
          description: Unauthorized (e.g., a user claim is not found or is invalid
            in the context)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      summary: Google OAuth2 Callback
      tags:
      - Authentication
  /jan/v1/auth/google/login:
    get:
      description: Redirects the user to the Google OAuth2 authorization page to initiate
        the login process.
      responses:
        "307":
          description: Redirects to Google's login page
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      summary: Google OAuth2 Login
      tags:
      - Authentication
  /jan/v1/auth/me:
    get:
      description: Retrieves the profile of the authenticated user based on the provided
        JWT.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved user profile
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.GeneralResponse-app_interfaces_http_routes_jan_v1_auth_GetMeResponse'
        "401":
          description: Unauthorized (e.g., missing or invalid JWT)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - Authentication
  /jan/v1/auth/refresh-token:
    get:
      consumes:
      - application/json
      description: Use a valid refresh token to obtain a new access token. The refresh
        token is typically sent in a cookie.
      produces:
      - application/json
      responses:
        "200":
          description: Successfully refreshed the access token
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.GeneralResponse-app_interfaces_http_routes_jan_v1_auth_RefreshTokenResponse'
        "400":
          description: Bad Request (e.g., invalid refresh token)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "401":
          description: Unauthorized (e.g., expired or missing refresh token)
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      summary: Refresh an access token
      tags:
      - Authentication
  /jan/v1/chat/completions:
    post:
      consumes:
      - application/json
      description: Generates a model response for the given chat conversation.
      parameters:
      - description: Chat completion request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/openai.ChatCompletionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/app_interfaces_http_routes_jan_v1_chat.ChatCompletionResponseSwagger'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a chat completion
      tags:
      - Chat
  /v1/chat/completions:
    post:
      consumes:
      - application/json
      description: Generates a model response for the given chat conversation.
      parameters:
      - description: Chat completion request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/openai.ChatCompletionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/app_interfaces_http_routes_v1_chat.ChatCompletionResponseSwagger'
        "400":
          description: Invalid request payload
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a chat completion
      tags:
      - Chat
  /v1/mcp:
    post:
      consumes:
      - application/json
      description: Handles Model Context Protocol (MCP) requests over an HTTP stream.
        The response is sent as a continuous stream of data.
      parameters:
      - description: MCP request payload
        in: body
        name: request
        required: true
        schema: {}
      produces:
      - text/event-stream
      responses:
        "200":
          description: Streamed response (SSE or chunked transfer)
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: MCP streamable endpoint
      tags:
      - MCP
  /v1/models:
    get:
      consumes:
      - application/json
      description: Retrieves a list of available models that can be used for chat
        completions or other tasks.
      produces:
      - application/json
      responses:
        "200":
          description: Successful response
          schema:
            $ref: '#/definitions/app_interfaces_http_routes_v1.ModelsResponse'
      security:
      - BearerAuth: []
      summary: List available models
      tags:
      - Models
  /v1/organization/admin_api_keys:
    get:
      description: Retrieves a paginated list of all admin API keys for the authenticated
        organization.
      parameters:
      - default: '"Bearer <admin_api_key>"'
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - default: 20
        description: The maximum number of items to return
        in: query
        name: limit
        type: integer
      - description: A cursor for use in pagination. The ID of the last object from
          the previous page
        in: query
        name: after
        type: string
      responses:
        "200":
          description: Successfully retrieved the list of admin API keys
          schema:
            $ref: '#/definitions/app_interfaces_http_routes_v1_organization.AdminApiKeyListResponse'
        "401":
          description: Unauthorized - invalid or missing API key
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List Admin API Keys
      tags:
      - Admin API Keys
    post:
      consumes:
      - application/json
      description: Creates a new admin API key for an organization. Requires a valid
        admin API key in the Authorization header.
      parameters:
      - default: '"Bearer <admin_api_key>"'
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: API key creation request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app_interfaces_http_routes_v1_organization.CreateOrganizationAdminAPIKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created admin API key
          schema:
            $ref: '#/definitions/app_interfaces_http_routes_v1_organization.OrganizationAdminAPIKeyResponse'
        "400":
          description: Bad request - invalid payload
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "401":
          description: Unauthorized - invalid or missing API key
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create Admin API Key
      tags:
      - Admin API Keys
  /v1/organization/admin_api_keys/{id}:
    delete:
      description: Deletes an admin API key by its ID.
      parameters:
      - default: '"Bearer <admin_api_key>"'
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the admin API key to delete
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Successfully deleted the admin API key
          schema:
            $ref: '#/definitions/app_interfaces_http_routes_v1_organization.AdminAPIKeyDeletedResponse'
        "401":
          description: Unauthorized - invalid or missing API key
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "404":
          description: Not Found - API key with the given ID does not exist or does
            not belong to the organization
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete Admin API Key
      tags:
      - Admin API Keys
    get:
      description: Retrieves a specific admin API key by its ID.
      parameters:
      - default: '"Bearer <admin_api_key>"'
        description: Bearer token
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID of the admin API key
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Successfully retrieved the admin API key
          schema:
            $ref: '#/definitions/app_interfaces_http_routes_v1_organization.OrganizationAdminAPIKeyResponse'
        "401":
          description: Unauthorized - invalid or missing API key
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
        "404":
          description: Not Found - API key with the given ID does not exist or does
            not belong to the organization
          schema:
            $ref: '#/definitions/menlo_ai_jan-api-gateway_app_interfaces_http_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Admin API Key
      tags:
      - Admin API Keys
  /v1/version:
    get:
      description: Returns the current build version of the API server.
      produces:
      - application/json
      responses:
        "200":
          description: version info
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get API build version
      tags:
      - System
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
