{{- if .Values.inference.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "jan-server.fullname" . }}-cleanup
  labels:
    {{- include "jan-server.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "jan-server.fullname" . }}-cleanup
  labels:
    {{- include "jan-server.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "jan-server.fullname" . }}-cleanup
  labels:
    {{- include "jan-server.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ include "jan-server.fullname" . }}-cleanup
subjects:
- kind: ServiceAccount
  name: {{ include "jan-server.fullname" . }}-cleanup
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "jan-server.fullname" . }}-cleanup-deps
  labels:
    {{- include "jan-server.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ include "jan-server.fullname" . }}-cleanup-deps
    spec:
      restartPolicy: Never
      serviceAccountName: {{ include "jan-server.fullname" . }}-cleanup
      containers:
      - name: cleanup-deps
        image: dtzar/helm-kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          set -e
          
          echo "üßπ Cleaning up Jan Gateway dependencies..."
          
          # Check if we should cleanup dependencies (only if no other charts depend on them)
          {{- if .Values.inference.cleanup.autoCleanupDependencies }}
          
          # Count how many releases might be using these operators (simple approach)
          DEPENDENT_RELEASES=$(helm list -A | grep -E "(jan-|inference|ai-)" | grep -v "{{ .Release.Name }}" | wc -l || echo "0")
          
          if [ "$DEPENDENT_RELEASES" -eq "0" ]; then
            echo "üöÄ No other dependent releases found, cleaning up operators..."
            
            {{- if and .Values.inference.dependencies.aibrix.enabled .Values.inference.cleanup.cleanupAibrix }}
            echo "Removing Aibrix..."
            if helm list -n aibrix-system | grep -q "aibrix"; then
              helm uninstall aibrix -n aibrix-system || true
              sleep 10  # Wait for resources to be cleaned up
            fi
            kubectl delete namespace aibrix-system --ignore-not-found=true || true
            {{- else if .Values.inference.dependencies.aibrix.enabled }}
            echo "‚è© Skipping Aibrix cleanup (cleanupAibrix=false)"
            {{- end }}
            
            {{- if and .Values.inference.dependencies.envoyGateway.enabled .Values.inference.cleanup.cleanupEnvoyGateway }}
            echo "Removing Envoy Gateway..."
            if helm list -n envoy-gateway-system | grep -q "envoy-gateway"; then
              helm uninstall envoy-gateway -n envoy-gateway-system || true
              sleep 10  # Wait for resources to be cleaned up
            fi
            kubectl delete namespace envoy-gateway-system --ignore-not-found=true || true
            {{- else if .Values.inference.dependencies.envoyGateway.enabled }}
            echo "‚è© Skipping Envoy Gateway cleanup (cleanupEnvoyGateway=false)"
            {{- end }}
            
            {{- if and .Values.inference.dependencies.kuberayOperator.enabled .Values.inference.cleanup.cleanupKuberayOperator }}
            echo "Removing KubeRay Operator..."
            if helm list -n {{ .Values.inference.dependencies.kuberayOperator.namespace }} | grep -q "kuberay-operator"; then
              helm uninstall kuberay-operator -n {{ .Values.inference.dependencies.kuberayOperator.namespace }} || true
              sleep 10  # Wait for resources to be cleaned up
            fi
            kubectl delete namespace {{ .Values.inference.dependencies.kuberayOperator.namespace }} --ignore-not-found=true || true
            {{- else if .Values.inference.dependencies.kuberayOperator.enabled }}
            echo "‚è© Skipping KubeRay Operator cleanup (cleanupKuberayOperator=false)"
            {{- end }}
            
            {{- if and .Values.inference.dependencies.gpuOperator.enabled .Values.inference.cleanup.cleanupGpuOperator }}
            echo "Removing GPU Operator..."
            if helm list -n gpu-operator-resources | grep -q "gpu-operator"; then
              helm uninstall gpu-operator -n gpu-operator-resources || true
              sleep 10  # Wait for resources to be cleaned up
            fi
            kubectl delete namespace gpu-operator-resources --ignore-not-found=true || true
            {{- else if .Values.inference.dependencies.gpuOperator.enabled }}
            echo "‚è© Skipping GPU Operator cleanup (cleanupGpuOperator=false)"
            {{- end }}
            
            echo "‚úÖ Dependencies cleanup completed"
          else
            echo "‚ö†Ô∏è  Found $DEPENDENT_RELEASES other releases that might depend on operators, skipping cleanup"
            echo "To force cleanup, run:"
            echo "  helm uninstall gpu-operator -n gpu-operator-resources"
            echo "  helm uninstall kuberay-operator -n kuberay-system"
            echo "  helm uninstall envoy-gateway -n envoy-gateway-system"
            echo "  helm uninstall aibrix -n aibrix-system"
          fi
          
          {{- else }}
          
          echo "‚ö†Ô∏è  Auto-cleanup disabled. Dependencies were NOT removed:"
          echo "  - GPU Operator (gpu-operator-resources namespace)"
          echo "  - KubeRay Operator (kuberay-system namespace)" 
          echo "  - Envoy Gateway (envoy-gateway-system namespace)"
          echo "  - Aibrix (aibrix-system namespace)"
          echo ""
          echo "To remove manually:"
          echo "  helm uninstall gpu-operator -n gpu-operator-resources"
          echo "  helm uninstall kuberay-operator -n kuberay-system"
          echo "  helm uninstall envoy-gateway -n envoy-gateway-system" 
          echo "  helm uninstall aibrix -n aibrix-system"
          echo ""
          echo "To enable auto-cleanup: --set inference.cleanup.autoCleanupDependencies=true"
          
          {{- end }}
          
          echo "üéâ Jan Gateway cleanup completed"
---
{{- end }}